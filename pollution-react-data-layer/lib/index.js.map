{"version":3,"sources":["../src/index.js"],"names":["process","env","NODE_ENV","REACT_APP_PUSHER_APP_KEY","middlewares","require","logger","push","store","applyMiddleware","createStore","reducers","pusher","Pusher","cluster","encrypted","channel","subscribe","DataLayer","children","DataLayerProvider","CONTEXT_TYPES","axios","create","AXIOS_CONFIG","enhanceCountriesList","enhanceMeasurementsByCity"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;AACA;;AACA;;AAEA;;AACA;;;;AAEA;;;;AACA;;;;;;mBAKIA,QAAQC,G;IAFRC,Q,gBAAAA,Q;IACAC,wB,gBAAAA,wB;;AAGJ;;AACA,IAAMC,cAAc,EAApB;;AAEA,IAAIF,aAAa,aAAjB,EAAgC;AAAA,mBACXG,QAAQ,cAAR,CADW;AAAA,QACtBC,MADsB,YACtBA,MADsB;;AAG9BF,gBAAYG,IAAZ,CAAiBD,MAAjB;AACD;;AAED,IAAME,QAAQ,oBAAQC,wCAAmBL,WAAnB,CAAR,EAAyCM,kBAAzC,EAAsDC,kBAAtD,CAAd;;AAEA;AACA,IAAMC,SAAS,IAAIC,kBAAJ,CAAWV,wBAAX,EAAqC;AAChDW,aAAS,IADuC;AAEhDC,eAAW;AAFqC,CAArC,CAAf;;AAKA,IAAMC,UAAUJ,OAAOK,SAAP,gBAA8Bf,QAA9B,CAAhB;;AAEA,IAAMgB,YAAY,SAAZA,SAAY;AAAA,QAAGC,QAAH,QAAGA,QAAH;AAAA,WACd;AAAC,4BAAD;AAAA,UAAU,OAAOX,KAAjB;AACMW;AADN,KADc;AAAA,CAAlB;;AAMA,IAAMC,oBAAoB,4BACtBC,wBADsB,EAEtB;AAAA,WAAO;AACHC,eAAOA,gBAAMC,MAAN,CAAaC,uBAAb,CADJ;AAEHR;AAFG,KAAP;AAAA,CAFsB,EAMxBE,SANwB,CAA1B;;QASIE,iB,GAAAA,iB;QACAK,oB,GAAAA,uB;QACAC,yB,GAAAA,4B","file":"index.js","sourcesContent":["import axios from 'axios';\nimport Pusher from 'pusher-js';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { withContext } from 'recompose';\nimport { applyMiddleware, compose, createStore } from 'redux';\n\nimport { AXIOS_CONFIG, CONTEXT_TYPES } from './constants';\nimport reducers from './reducers';\n\nimport enhanceCountriesList from './CountriesList';\nimport enhanceMeasurementsByCity from './MeasurementsByCity';\n\nconst {\n    NODE_ENV,\n    REACT_APP_PUSHER_APP_KEY,\n} = process.env;\n\n// setup Logger\nconst middlewares = [];\n\nif (NODE_ENV === 'development') {\n  const { logger } = require('redux-logger');\n\n  middlewares.push(logger);\n}\n\nconst store = compose(applyMiddleware(...middlewares))(createStore)(reducers);\n\n// setup Pusher\nconst pusher = new Pusher(REACT_APP_PUSHER_APP_KEY, {\n    cluster: 'eu',\n    encrypted: true\n});\n  \nconst channel = pusher.subscribe(`pollution-${NODE_ENV}`);\n\nconst DataLayer = ({ children }) => (\n    <Provider store={store}>\n        { children }\n    </Provider>\n);\n\nconst DataLayerProvider = withContext(\n    CONTEXT_TYPES,\n    () => ({\n        axios: axios.create(AXIOS_CONFIG),\n        channel,\n    }),\n)(DataLayer);\n\nexport { \n    DataLayerProvider,\n    enhanceCountriesList,\n    enhanceMeasurementsByCity,\n};\n"]}